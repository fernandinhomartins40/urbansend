# 🚀 Deploy Simplificado - UrbanSend
# Domínio: www.urbanmail.com.br | VPS: 72.60.10.112:3010

name: 🚀 Deploy UrbanSend

on:
  push:
    branches: [main]
    paths-ignore: ['*.md', 'docs/**']
  workflow_dispatch:

env:
  VPS_HOST: 72.60.10.112
  VPS_USER: root
  VPS_PATH: /opt/urbansend
  APP_PORT: 3010

jobs:
  deploy:
    name: 🚀 Deploy Completo
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      # ==================== PREPARAÇÃO ====================
      - name: 📥 1️⃣ Checkout & Setup
        uses: actions/checkout@v4
        
      - name: 🔧 2️⃣ Install Dependencies
        run: |
          echo "🔧 Instalando dependências..."
          sudo apt-get update -qq
          sudo apt-get install -y sshpass curl
          
          echo "🔐 Testando conexão SSH..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 \
            $VPS_USER@$VPS_HOST "echo '✅ SSH conectado com sucesso'"

      # ==================== BUILD LOCAL ====================
      - name: 🏗️ 3️⃣ Build Docker Image
        run: |
          echo "🏗️ Construindo imagem Docker..."
          docker build -t urbansend:latest . --no-cache
          
          echo "📊 Verificando imagem construída..."
          docker images | grep urbansend
          
          echo "💾 Exportando imagem..."
          docker save urbansend:latest | gzip > urbansend-image.tar.gz
          IMAGE_SIZE=$(du -h urbansend-image.tar.gz | cut -f1)
          echo "📦 Tamanho da imagem: $IMAGE_SIZE"

      # ==================== PREPARAR VPS ====================
      - name: 🛠️ 4️⃣ Setup VPS Environment
        run: |
          echo "🛠️ Configurando ambiente da VPS..."
          
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'SCRIPT'
          set -e
          
          # Instalar Docker se necessário
          if ! command -v docker >/dev/null 2>&1; then
            echo "📦 Instalando Docker..."
            curl -fsSL https://get.docker.com | sh
            systemctl enable docker
            systemctl start docker
          else
            echo "✅ Docker já instalado"
          fi
          
          # Instalar Docker Compose
          if ! command -v docker-compose >/dev/null 2>&1; then
            echo "📦 Instalando Docker Compose..."
            curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64" \
              -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
          else
            echo "✅ Docker Compose já instalado"
          fi
          
          # Criar diretórios
          echo "📁 Criando diretórios..."
          mkdir -p /opt/urbansend/{data,logs,backup}
          chmod -R 755 /opt/urbansend
          
          echo "✅ VPS configurada"
          SCRIPT

      # ==================== TRANSFERIR ARQUIVOS ====================
      - name: 📤 5️⃣ Transfer Files
        run: |
          echo "📤 Enviando arquivos para VPS..."
          
          # Enviar imagem Docker
          echo "🐳 Enviando imagem Docker..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" scp -o StrictHostKeyChecking=no \
            urbansend-image.tar.gz $VPS_USER@$VPS_HOST:$VPS_PATH/
          
          # Enviar docker-compose
          echo "📋 Enviando docker-compose.yml..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" scp -o StrictHostKeyChecking=no \
            docker-compose.yml $VPS_USER@$VPS_HOST:$VPS_PATH/
          
          # Enviar configurações Docker
          echo "⚙️ Enviando configurações..."
          sshpass -p "${{ secrets.VPS_PASSWORD }}" scp -o StrictHostKeyChecking=no -r \
            docker/ $VPS_USER@$VPS_HOST:$VPS_PATH/
          
          echo "✅ Todos os arquivos enviados"

      # ==================== CONFIGURAR PRODUÇÃO ====================
      - name: ⚙️ 6️⃣ Configure Production
        run: |
          echo "⚙️ Configurando ambiente de produção..."
          
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'CONFIG'
          cd /opt/urbansend
          
          # Criar .env de produção
          cat > docker/.env.production << 'ENV'
          NODE_ENV=production
          PORT=3001
          INTERNAL_PORT=3010
          DOMAIN=www.urbanmail.com.br
          PUBLIC_URL=http://www.urbanmail.com.br
          API_URL=http://www.urbanmail.com.br/api
          DATABASE_URL=/app/data/database.sqlite
          JWT_SECRET=urbansend_jwt_secret_key_production_2024_secure_32_chars_minimum
          COOKIE_SECRET=urbansend_cookie_secret_production_2024_secure_32_chars_min
          API_KEY_SALT=urbansend_api_key_salt_production_2024_secure_32_chars_min
          ALLOWED_ORIGINS=http://www.urbanmail.com.br,https://www.urbanmail.com.br
          SMTP_SERVER_PORT=25
          SMTP_HOSTNAME=www.urbanmail.com.br
          FROM_EMAIL=noreply@urbanmail.com.br
          FROM_NAME=UrbanMail
          LOG_LEVEL=info
          RATE_LIMIT_MAX_REQUESTS=100
          ENV
          
          # Tornar scripts executáveis
          chmod +x docker/start.sh 2>/dev/null || true
          
          echo "✅ Configuração de produção criada"
          CONFIG

      # ==================== DEPLOY APLICAÇÃO ====================
      - name: 🚀 7️⃣ Deploy Application
        run: |
          echo "🚀 Fazendo deploy da aplicação..."
          
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'DEPLOY'
          set -e
          cd /opt/urbansend
          
          # Parar aplicação existente
          echo "🛑 Parando aplicação existente..."
          docker-compose down --remove-orphans 2>/dev/null || true
          docker system prune -f >/dev/null 2>&1 || true
          
          # Carregar nova imagem
          echo "📦 Carregando nova imagem Docker..."
          gunzip -c urbansend-image.tar.gz | docker load
          
          # Iniciar aplicação
          echo "▶️ Iniciando nova aplicação..."
          docker-compose up -d
          
          # Aguardar inicialização
          echo "⏳ Aguardando inicialização (30s)..."
          sleep 30
          
          # Verificar status
          echo "🔍 Verificando status dos containers..."
          docker-compose ps
          
          if docker-compose ps | grep -q "Up"; then
            echo "✅ Aplicação iniciada com sucesso"
          else
            echo "❌ Falha ao iniciar aplicação"
            echo "📋 Logs dos containers:"
            docker-compose logs --tail 30
            exit 1
          fi
          
          # Limpeza
          rm -f urbansend-image.tar.gz
          echo "🎉 Deploy concluído!"
          DEPLOY

      # ==================== VERIFICAÇÕES FINAIS ====================
      - name: 🧪 8️⃣ Health Check
        run: |
          echo "🧪 Executando verificações de saúde..."
          
          # Aguardar estabilização
          sleep 15
          
          # Testar endpoint de saúde
          echo "🏥 Testando endpoint /health..."
          HEALTH_OK=false
          
          for i in {1..10}; do
            echo "🔄 Tentativa $i/10..."
            
            if curl -f --connect-timeout 5 --max-time 10 "http://$VPS_HOST:$APP_PORT/health" 2>/dev/null; then
              echo "✅ Health check passou na tentativa $i"
              HEALTH_OK=true
              break
            fi
            
            if [ $i -lt 10 ]; then
              sleep 10
            fi
          done
          
          if [ "$HEALTH_OK" = false ]; then
            echo "❌ Health check falhou após 10 tentativas"
            echo "🔍 Verificando status da VPS..."
            sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST \
              "cd /opt/urbansend && docker-compose logs --tail 20"
            exit 1
          fi
          
          # Testar página principal
          echo "🌐 Testando página principal..."
          if curl -f --connect-timeout 5 --max-time 10 "http://$VPS_HOST:$APP_PORT/" >/dev/null 2>&1; then
            echo "✅ Página principal respondendo"
          else
            echo "⚠️ Página principal não responde (pode ser normal)"
          fi

      # ==================== RESUMO FINAL ====================
      - name: 📊 9️⃣ Summary
        run: |
          echo ""
          echo "🎉 ===== DEPLOY CONCLUÍDO COM SUCESSO ====="
          echo ""
          echo "📋 INFORMAÇÕES DO DEPLOY:"
          echo "  🌐 Domínio: www.urbanmail.com.br"
          echo "  🔌 IP VPS: $VPS_HOST"
          echo "  🚪 Porta: $APP_PORT"
          echo "  📧 SMTP: Porta 25"
          echo "  ⏰ Deploy: $(date '+%d/%m/%Y %H:%M:%S')"
          echo ""
          echo "🔗 URLS DISPONÍVEIS:"
          echo "  📱 App: http://$VPS_HOST:$APP_PORT"
          echo "  🏥 Health: http://$VPS_HOST:$APP_PORT/health"
          echo "  🌐 Domínio: http://www.urbanmail.com.br:$APP_PORT"
          echo ""
          echo "✅ Aplicação UrbanSend está online!"