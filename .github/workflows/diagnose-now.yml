name: 🔍 Diagnose VPS Issues Now

on:
  workflow_dispatch:

env:
  VPS_HOST: '72.60.10.112'
  VPS_USER: 'root'
  APP_DIR: '/var/www/urbansend'

jobs:
  diagnose:
    name: 🔍 Emergency Diagnosis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 🔧 Setup SSH
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y sshpass
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan -H ${{ env.VPS_HOST }} >> ~/.ssh/known_hosts 2>/dev/null

    - name: 🔍 Full System Diagnosis
      run: |
        echo "🔍 DIAGNÓSTICO COMPLETO DA VPS"
        echo "=============================="
        
        sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "
        echo '📋 1. INFORMAÇÕES DO SISTEMA:'
        echo 'Hostname:' \$(hostname)
        echo 'Uptime:' \$(uptime)
        echo 'Date:' \$(date)
        echo ''
        
        echo '🐳 2. STATUS DO DOCKER:'
        if command -v docker >/dev/null; then
          echo '✅ Docker instalado'
          docker --version
          echo 'Docker status:' \$(systemctl is-active docker)
          echo ''
          echo 'Containers em execução:'
          docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'
          echo ''
          echo 'Todas as imagens:'
          docker images --format 'table {{.Repository}}\t{{.Tag}}\t{{.Size}}'
        else
          echo '❌ Docker NÃO instalado'
        fi
        echo ''
        
        echo '📁 3. CONTEÚDO DO DIRETÓRIO DA APLICAÇÃO:'
        if [ -d '${{ env.APP_DIR }}' ]; then
          echo '✅ Diretório existe: ${{ env.APP_DIR }}'
          ls -la ${{ env.APP_DIR }}
          echo ''
          if [ -f '${{ env.APP_DIR }}/docker-compose.production.yml' ]; then
            echo '✅ docker-compose.production.yml encontrado'
            echo 'Conteúdo (primeiras 20 linhas):'
            head -20 ${{ env.APP_DIR }}/docker-compose.production.yml
          else
            echo '❌ docker-compose.production.yml NÃO encontrado'
          fi
        else
          echo '❌ Diretório NÃO existe: ${{ env.APP_DIR }}'
        fi
        echo ''
        
        echo '🌐 4. PORTAS EM USO:'
        netstat -tlnp | grep -E ':(3010|25|6379|80|443)' || echo 'Nenhuma das portas esperadas está em uso'
        echo ''
        
        echo '🔥 5. STATUS DO FIREWALL:'
        if command -v ufw >/dev/null; then
          echo '✅ UFW instalado'
          ufw status verbose
        else
          echo '❌ UFW não instalado'
        fi
        echo ''
        echo 'Regras iptables básicas:'
        iptables -L INPUT -n | head -10
        echo ''
        
        echo '💾 6. RECURSOS DO SISTEMA:'
        echo 'Memória:'
        free -h
        echo 'Disco:'
        df -h /
        echo 'CPU Load:'
        cat /proc/loadavg
        echo ''
        
        echo '📝 7. LOGS RECENTES:'
        if [ -d '${{ env.APP_DIR }}' ]; then
          cd '${{ env.APP_DIR }}'
          echo 'Status do docker-compose:'
          docker compose -f docker-compose.production.yml ps 2>/dev/null || echo 'docker-compose não funcionando'
          echo ''
          echo 'Logs dos containers (últimas 20 linhas):'
          docker compose -f docker-compose.production.yml logs --tail=20 2>/dev/null || echo 'Sem logs de containers'
        fi
        echo ''
        
        echo '🔍 8. CONECTIVIDADE INTERNA:'
        echo 'Testando localhost:3010 internamente:'
        curl -v --connect-timeout 5 http://localhost:3010/health 2>&1 || echo 'Falha na conexão interna'
        echo ''
        
        echo '✅ DIAGNÓSTICO COMPLETO'
        "

    - name: 📊 Show Diagnosis Summary
      run: |
        echo "🎯 PRÓXIMOS PASSOS BASEADOS NO DIAGNÓSTICO:"
        echo ""
        echo "Se Docker não estiver rodando:"
        echo "- Execute: Actions → Fix VPS Connectivity Issues → fix-firewall"
        echo ""
        echo "Se containers não estiverem rodando:"
        echo "- Execute: Actions → Fix VPS Connectivity Issues → restart-services"
        echo ""
        echo "Se precisar de reset completo:"
        echo "- Execute: Actions → Fix VPS Connectivity Issues → full-reset"
        echo ""
        echo "Se portas estiverem bloqueadas:"
        echo "- Verifique firewall do provedor VPS"
        echo "- Pode ser problema de security group/rede"