name: Fix VPS Connectivity

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'diagnose'
        type: choice
        options:
        - diagnose
        - fix-firewall
        - restart-services
        - full-reset

jobs:
  fix-connectivity:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Diagnose Connectivity Issues
      if: ${{ github.event.inputs.action == 'diagnose' }}
      env:
        VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
      run: |
        echo "üîç Diagnosing connectivity issues..."
        
        sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@72.60.10.112 "
        echo 'üìã System Information:'
        uname -a
        
        echo 'üî• Firewall Status:'
        if command -v ufw &> /dev/null; then
            ufw status verbose
        else
            echo 'UFW not installed'
        fi
        
        echo 'üåê Network Interfaces:'
        ip addr show
        
        echo 'üîß Port Bindings:'
        netstat -tlnp | grep -E ':(3010|3011|6380|8082)'
        
        echo 'üê≥ Docker Status:'
        docker ps --filter 'name=urbansend_'
        
        echo 'üì° iptables Rules:'
        iptables -L -n | head -20
        
        echo 'üèÉ Running Processes:'
        ps aux | grep -E '(docker|nginx|node)' | grep -v grep
        
        echo 'üìù Docker Logs (last 50 lines):'
        docker logs urbansend_backend --tail 50 || echo 'Backend container not running'
        docker logs urbansend_frontend --tail 50 || echo 'Frontend container not running'
        "

    - name: Fix Firewall
      if: ${{ github.event.inputs.action == 'fix-firewall' }}
      env:
        VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
      run: |
        chmod +x scripts/fix-firewall.sh
        ./scripts/fix-firewall.sh

    - name: Restart Services
      if: ${{ github.event.inputs.action == 'restart-services' }}
      env:
        VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
      run: |
        echo "üîÑ Restarting UrbanSend services..."
        
        sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@72.60.10.112 "
        cd /var/www/urbansend
        
        echo 'Stopping services...'
        docker-compose -p urbansend down
        
        echo 'Cleaning up...'
        docker system prune -f
        
        echo 'Starting services...'
        docker-compose -p urbansend up -d --build
        
        echo 'Waiting for startup...'
        sleep 60
        
        echo 'Services status:'
        docker-compose -p urbansend ps
        
        echo 'Port check:'
        netstat -tlnp | grep -E ':(3010|3011|8082)'
        
        echo 'Health check:'
        curl -f http://localhost:3010/health || echo 'Health check failed'
        "

    - name: Full Reset
      if: ${{ github.event.inputs.action == 'full-reset' }}
      env:
        VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
      run: |
        echo "üîÑ Performing full reset..."
        
        sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no root@72.60.10.112 "
        echo 'Stopping all UrbanSend containers...'
        docker-compose -p urbansend down -v --remove-orphans || true
        
        echo 'Removing UrbanSend resources...'
        docker container rm -f \$(docker ps -aq --filter 'name=urbansend_') || true
        docker network rm urbansend_network || true
        docker volume rm \$(docker volume ls -q --filter 'name=urbansend_') || true
        
        echo 'Configuring firewall...'
        ufw allow 3010/tcp comment 'UrbanSend Backend' || true
        ufw allow 3011/tcp comment 'UrbanSend Frontend' || true
        ufw allow 8082/tcp comment 'UrbanSend Redis UI' || true
        ufw allow 22/tcp comment 'SSH' || true
        echo 'y' | ufw enable || true
        
        iptables -I INPUT -p tcp --dport 3010 -j ACCEPT || true
        iptables -I INPUT -p tcp --dport 3011 -j ACCEPT || true
        iptables -I INPUT -p tcp --dport 8082 -j ACCEPT || true
        iptables -I INPUT -p tcp --dport 22 -j ACCEPT || true
        iptables-save > /etc/iptables/rules.v4 || true
        
        echo 'Starting fresh deployment...'
        cd /var/www/urbansend
        docker-compose -p urbansend up -d --build
        
        sleep 60
        
        echo 'Final status:'
        docker ps --filter 'name=urbansend_'
        netstat -tlnp | grep -E ':(3010|3011|8082)'
        curl -f http://localhost:3010/health || echo 'Health check failed'
        "

    - name: Show Results
      run: |
        echo "‚úÖ Action completed: ${{ github.event.inputs.action }}"
        echo ""
        echo "üåê Test the following URLs:"
        echo "Frontend: http://72.60.10.112:3011"
        echo "Backend:  http://72.60.10.112:3010/health"
        echo "Redis UI: http://72.60.10.112:8082"
        echo ""
        echo "üîß If still not accessible:"
        echo "1. Check VPS provider firewall/security groups"
        echo "2. Verify VPS is not behind NAT"
        echo "3. Contact VPS provider support"