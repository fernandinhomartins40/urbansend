# Multi-stage Dockerfile for Development
FROM node:18-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    sqlite \
    curl \
    netcat-openbsd \
    redis \
    git

# Set working directory
WORKDIR /app

# Create app user for security
RUN addgroup -g 1001 -S ultrazend && \
    adduser -S ultrazend -u 1001 -G ultrazend

# Create data directories
RUN mkdir -p /app/data /app/logs /app/backups && \
    chown -R ultrazend:ultrazend /app

# Backend development stage
FROM base AS backend-dev

# Copy package files
COPY backend/package*.json /app/backend/
WORKDIR /app/backend

# Install backend dependencies
RUN npm ci --include=dev

# Copy backend source
COPY backend/ /app/backend/

# Build backend
RUN npm run build

# Frontend development stage  
FROM base AS frontend-dev

# Copy package files
COPY frontend/package*.json /app/frontend/
WORKDIR /app/frontend

# Install frontend dependencies
RUN npm ci --include=dev

# Copy frontend source
COPY frontend/ /app/frontend/

# Build frontend for development
RUN npm run build

# Final development stage
FROM base AS development

# Install global development tools
RUN npm install -g \
    nodemon \
    ts-node \
    @types/node \
    typescript

# Copy built backend
COPY --from=backend-dev /app/backend /app/backend
COPY --from=frontend-dev /app/frontend /app/frontend

# Copy configuration files
COPY configs/ /app/configs/
COPY scripts/ /app/scripts/
COPY .env /app/.env

# Create startup script
RUN cat > /app/start-dev.sh << 'EOF'
#!/bin/sh
set -e

echo "🚀 Starting UltraZend Development Environment..."

# Wait for Redis
echo "⏳ Waiting for Redis..."
while ! nc -z redis 6379; do
  sleep 1
done
echo "✅ Redis is ready"

# Create directories
mkdir -p /app/data /app/logs /app/backups

# Change ownership
chown -R ultrazend:ultrazend /app/data /app/logs /app/backups

# Switch to app user
exec su-exec ultrazend "$@"
EOF

RUN chmod +x /app/start-dev.sh

# Set permissions
RUN chown -R ultrazend:ultrazend /app

# Switch to non-root user
USER ultrazend

# Expose ports
EXPOSE 3001 25 587 465

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# Default command
CMD ["/app/start-dev.sh", "npm", "run", "dev", "--prefix", "/app/backend"]