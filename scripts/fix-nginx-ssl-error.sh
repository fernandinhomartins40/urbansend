#!/bin/bash

# üîß ULTRAZEND - Fix Nginx SSL Error
# Remove configura√ß√µes SSL antigas e for√ßa HTTP tempor√°rio

set -euo pipefail

# Configuration
SERVER_HOST="${DEPLOY_HOST:-31.97.162.155}"
SERVER_USER="${DEPLOY_USER:-root}"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Logging functions
log() { echo -e "${BLUE}[$(date +'%H:%M:%S')] $1${NC}"; }
success() { echo -e "${GREEN}[SUCCESS] $1${NC}"; }
error() { echo -e "${RED}[ERROR] $1${NC}"; exit 1; }
warning() { echo -e "${YELLOW}[WARNING] $1${NC}"; }

echo "üîß ULTRAZEND - CORRE√á√ÉO DO ERRO SSL DO NGINX"
echo "============================================="
log "Servidor: $SERVER_HOST"
echo ""

# 1. Parar Nginx e limpar configura√ß√µes SSL problem√°ticas
log "üõë Parando Nginx e limpando configura√ß√µes SSL antigas..."

ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
# Parar nginx
echo "‚èπÔ∏è Parando Nginx..."
systemctl stop nginx 2>/dev/null || true

# Backup de todas as configura√ß√µes atuais
echo "üì¶ Fazendo backup das configura√ß√µes atuais..."
backup_dir="/var/backups/nginx-$(date +%Y%m%d-%H%M%S)"
mkdir -p "$backup_dir"
cp -r /etc/nginx/sites-available "$backup_dir/" 2>/dev/null || true
cp -r /etc/nginx/sites-enabled "$backup_dir/" 2>/dev/null || true
cp /etc/nginx/nginx.conf "$backup_dir/" 2>/dev/null || true

echo "‚úÖ Backup criado em: $backup_dir"

# Remover todas as configura√ß√µes do site
echo "üóëÔ∏è Removendo configura√ß√µes antigas..."
rm -f /etc/nginx/sites-enabled/ultrazend
rm -f /etc/nginx/sites-enabled/default
rm -f /etc/nginx/sites-available/ultrazend

# Verificar se h√° outras configura√ß√µes SSL problem√°ticas
echo "üîç Verificando configura√ß√µes restantes..."
find /etc/nginx/sites-enabled/ -name "*.conf" -exec ls -la {} \; || echo "Nenhuma configura√ß√£o encontrada"
find /etc/nginx/sites-available/ -name "*" -type f -exec ls -la {} \; || echo "Nenhuma configura√ß√£o encontrada"

# Testar configura√ß√£o b√°sica do nginx
echo "üß™ Testando configura√ß√£o b√°sica do nginx..."
nginx -t || echo "‚ùå Configura√ß√£o nginx com problemas - continuando para fix"
EOF

success "‚úÖ Configura√ß√µes SSL antigas removidas"

# 2. Aplicar configura√ß√£o HTTP limpa
log "üìù Aplicando configura√ß√£o HTTP limpa..."

# Enviar configura√ß√£o HTTP limpa
scp -o StrictHostKeyChecking=no configs/nginx-http.conf $SERVER_USER@$SERVER_HOST:/tmp/ultrazend-nginx-http-clean.conf

ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
# Aplicar configura√ß√£o HTTP limpa
echo "üìã Aplicando nova configura√ß√£o HTTP..."
cp /tmp/ultrazend-nginx-http-clean.conf /etc/nginx/sites-available/ultrazend
ln -sf /etc/nginx/sites-available/ultrazend /etc/nginx/sites-enabled/

# Verificar se n√£o h√° refer√™ncias SSL na nova configura√ß√£o
if grep -q "ssl_certificate" /etc/nginx/sites-available/ultrazend; then
    echo "‚ùå ERRO: Nova configura√ß√£o ainda cont√©m refer√™ncias SSL!"
    grep -n "ssl" /etc/nginx/sites-available/ultrazend
    exit 1
else
    echo "‚úÖ Configura√ß√£o HTTP limpa (sem SSL)"
fi

# Testar nova configura√ß√£o
echo "üß™ Testando nova configura√ß√£o HTTP..."
if nginx -t; then
    echo "‚úÖ Configura√ß√£o HTTP v√°lida"
else
    echo "‚ùå Configura√ß√£o HTTP inv√°lida"
    nginx -t
    exit 1
fi

# Criar diret√≥rio webroot para Let's Encrypt se n√£o existir
echo "üìÅ Criando diret√≥rio webroot..."
mkdir -p /var/www/html
chown -R www-data:www-data /var/www/html
echo "<h1>UltraZend - Server Running</h1>" > /var/www/html/index.html

# Iniciar nginx com configura√ß√£o HTTP
echo "üöÄ Iniciando Nginx com HTTP..."
systemctl start nginx
systemctl enable nginx

# Verificar se nginx est√° rodando
if systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx iniciado com sucesso"
    
    # Testar acesso local
    echo "üåê Testando acesso local HTTP..."
    sleep 3
    if curl -f -s -m 5 http://localhost > /dev/null; then
        echo "‚úÖ HTTP local funcionando"
    else
        echo "‚ö†Ô∏è HTTP local n√£o est√° respondendo"
        curl -s -m 5 http://localhost || echo "Falha no curl"
    fi
    
    # Mostrar status das portas
    echo "üìä Status das portas:"
    netstat -tlnp | grep nginx || echo "Nginx n√£o est√° escutando"
    
else
    echo "‚ùå Nginx falhou ao iniciar"
    systemctl status nginx
    journalctl -u nginx --no-pager -n 10
    exit 1
fi
EOF

success "‚úÖ Configura√ß√£o HTTP aplicada"

# 3. Verificar configura√ß√£o final
log "üîç Verificando configura√ß√£o final..."

ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
echo ""
echo "=== VERIFICA√á√ÉO FINAL ==="

# Status do Nginx
echo "üìä Status do Nginx:"
systemctl status nginx --no-pager -l

# Configura√ß√£o ativa
echo ""
echo "üìã Configura√ß√£o ativa:"
echo "Sites habilitados:"
ls -la /etc/nginx/sites-enabled/

echo ""
echo "Conte√∫do da configura√ß√£o:"
echo "--- /etc/nginx/sites-available/ultrazend ---"
head -20 /etc/nginx/sites-available/ultrazend

# Teste final
echo ""
echo "üß™ Teste final do Nginx:"
if nginx -t; then
    echo "‚úÖ Configura√ß√£o nginx v√°lida"
else
    echo "‚ùå Configura√ß√£o nginx inv√°lida"
fi

# Portas em uso
echo ""
echo "üì° Portas em uso pelo Nginx:"
netstat -tlnp | grep nginx

# Logs recentes
echo ""
echo "üìã √öltimos logs do Nginx:"
tail -5 /var/log/nginx/error.log 2>/dev/null || echo "Arquivo de log n√£o encontrado"

echo ""
echo "=== CORRE√á√ÉO CONCLU√çDA ==="
EOF

echo ""
success "üéâ CORRE√á√ÉO DO NGINX CONCLU√çDA!"
echo "==============================="
success "‚úÖ Configura√ß√µes SSL antigas removidas"
success "‚úÖ Configura√ß√£o HTTP limpa aplicada"  
success "‚úÖ Nginx rodando apenas com HTTP"
echo ""
warning "‚ö†Ô∏è IMPORTANTE: Execute novamente o deploy ap√≥s esta corre√ß√£o"
log "üîÑ O pr√≥ximo deploy ir√°:"
log "   1. Usar a configura√ß√£o HTTP limpa"
log "   2. Gerar certificados SSL corretamente"
log "   3. Aplicar SSL somente ap√≥s certificados serem criados"
echo ""
log "üåê Teste o acesso HTTP: http://www.ultrazend.com.br"